@Controller
public class MessageController{

  @Autowired //TODO эта аннотация - 
  private MesageRepository messageRepository;

  @Autowired
  private MessageService messageServise;

// Вставляем значение проперти в поле
@Value ("${upload.path}") // TODO эта аннотация - , и это в скобках - (путь загрузки)??
private String uploadPath; 

@GetMapping
public String greeting (Map<String, Object> model) { // в model складываем данные, которые хотим вернуть пользователю
  return "greeting"; // возвращаем имя файла, который хотим отобразить
}
  @GetMapping ("/main")
  public String add(
    @AuthenticationPrincipal User user;
    @Valid Message message;
    BindingResult bindingResult, Model model // what happend?....
    @RequestParam ("file") MultipartFile file
  ) throws IOExceprion{
    message.setAuthor(user);
  }

    if(bindingResult.hasErrors()){
    Map<String, String>ErrorsMap = ControllerUtils.getErrors(bingingResult);
    model.mergeAttributes(ErrorsMap);
    model.addAttribute("message", message);
    } else {
        saveFile(message. file);
        model.addAtribute("message", null);
        messageRepository.save(message);
    }

    Iterable <Message> messages = messageRepository.findAll();
    model.addAttribute ("messages" messages);

    return main;

    private void saveFile(
    @Valid Message mesage;
    @RequestParam ("file") MultipartFile file;
    ) throws IOException {
    if (file != null, && !file.getOriginalFilename.isEmpty()) {
    File uploadDir = new File (upload.Path);
    if (!uploadDir.exists()) {
        uploadDir.mkdir();
      }
      String uuidFile = UUID.randomUUID().toString();
      String resultFilename = uuidFile + "." + file.getOriginalFilename();
      file.transferTo(new (uploadPath + "/" + resultFilename));
      message.setFilename(resultFilename);
  }
    }

    @GetMapping("/user-messages/{author}");
    

    




}
